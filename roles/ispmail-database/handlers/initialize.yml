---
- name: Copy SQL database schema to server
  copy:
    src: schema.sql
    mode: "0644"
    dest: /tmp
  listen: initialize database

- name: Set up SQL schema of mailserver database (postgresql)
  postgresql_db:
    name: mailserver
    state: restore
    target: /tmp/schema.sql
  become: true
  become_user: postgres
  when: ispmail_database == "pgsql"
  listen: initialize database

- name: Set up SQL schema of mailserver database (sqlite)
  shell:
    cmd: "sqlite3 /etc/maildb.sqlite3 < /tmp/schema.sql"
  when: ispmail_database == "sqlite"
  listen: initialize database

- name: Give pgadmin rights on the mail db
  postgresql_privs:
    database: mailserver
    type: table
    objs: "{{ item }}"
    roles: pgadmin
    privs: SELECT,INSERT,UPDATE,DELETE
  loop:
    - virtual_domains
    - virtual_alias_domains
    - virtual_aliases
    - virtual_users
  become: true
  become_user: postgres
  when: ispmail_database == "pgsql"
  listen: initialize database

  # This line is mandatory in order for pgadmin to be able to use the SERIALs
- name: Give pgadmin rights on the mail db serials
  postgresql_privs:
    database: mailserver
    type: sequence
    objs: "{{ item }}"
    roles: pgadmin
    privs: SELECT,USAGE
  loop:
    - virtual_domains_id_seq
    - virtual_alias_domains_id_seq
    - virtual_aliases_id_seq
    - virtual_users_id_seq
  become: true
  become_user: postgres
  when: ispmail_database == "pgsql"
  listen: initialize database

- name: Give mail user rights on the mail db
  postgresql_privs:
    database: mailserver
    type: table
    objs: "{{ item }}"
    roles: mail
    privs: SELECT
  loop:
    - virtual_domains
    - virtual_alias_domains
    - virtual_aliases
    - virtual_users
  become: true
  become_user: postgres
  when: ispmail_database == "pgsql"
  listen: initialize database
