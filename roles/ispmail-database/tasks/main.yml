---
- name: Install postgres packages
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - postgresql

- name: Make sure postgresql server is started
  service:
    name: postgresql
    enabled: yes
    state: started

- name: Installing required Python pgsql module for Ansible to manage databases
  apt:
    pkg: python-psycopg2
    state: present

- name: creating SQL mail user
  postgresql_user:
    name: mail
    state: present
  become: true
  become_user: postgres
- name: creating mailserver SQL database
  postgresql_db:
    name: mailserver
    encoding: UTF-8
    lc_collate: C
    lc_ctype: C
    template: template0
    owner: mail
  become: true
  become_user: postgres

- name: creating SQL pgadmin user
  postgresql_user:
    name: pgadmin
    password: "{{ispmail_pgadmin_password}}"
    state: present
    db: mailserver
    priv: ALL
  become: true
  become_user: postgres

- name: Creating the postgres user map
  blockinfile:
    dest: /etc/postgresql/9.6/main/pg_ident.conf
    marker: "### {mark} ANSIBLE MANAGED BLOCK : MAILMAP ###"
    insertafter: "^#\\s-+"
    content: |
      mailmap         dovecot                 mail
      mailmap         postfix                 mail
      mailmap         root                    mail
      mailmap         postgres                postgres


- name: Configuring connections to the pg database
  blockinfile:
    path: /etc/postgresql/9.6/main/pg_hba.conf
    marker: "###### ANSIBLE MANAGED BLOCK ######"
    insertafter: "local\\s+all\\s+postgres\\s+peer"
    content: |
      local   mailserver      all             peer                    map=mailmap
      host    mailserver      pgadmin         127.0.0.1/32            md5
      # IPv4 local connections:
      host    all             all             127.0.0.1/32            md5
      # IPv6 local connections:
      host    all             all             ::1/128                 md5

- name: copying SQL database schema to server
  copy: src=schema.sql dest=/tmp

#- name: setting up SQL schema of mailserver database
#  postgresql_db: name=mailserver state=import target=/tmp/schema.sql
#  become: true
#  become_user: postgres

# Ugly, not idempotent fix, to change

- name: setting up SQL schema of mailserver database
  shell: "psql mailserver < /tmp/schema.sql"
  become: true
  become_user: postgres

- name: copying SQL test data to server
  copy: src=test.sql dest=/tmp
  when: ispmail_populate_test_data == true
  become: true
  become_user: postgres

- name: populating the database with test data
  postgresql_db: name=mailserver state=import target=/tmp/test.sql
  when: ispmail_populate_test_data == true
  become: true
  become_user: postgres

- name: Giving pgadmin user some rights
  postgresql_privs:
    database: mailserver
    type: table
    objs: "{{ item }}"
    roles: pgadmin
    privs: SELECT,INSERT,UPDATE,DELETE
  with_items:
    - virtual_domains
    - virtual_aliases
    - virtual_users
  become: true
  become_user: postgres

- name: Giving mail user some rights
  postgresql_privs:
    database: mailserver
    type: table
    objs: "{{ item }}"
    roles: mail
    privs: SELECT,INSERT,UPDATE,DELETE
  with_items:
    - virtual_domains
    - virtual_aliases
    - virtual_users
  become: true
  become_user: postgres
