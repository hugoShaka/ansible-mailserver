---
- name: Install postgres packages
  apt:
    name:
      - postgresql
      - python-psycopg2
    state: present
  register: apt_result
  until: apt_result is succeeded
  retries: 3

- name: Make sure postgresql server is started
  service:
    name: postgresql
    enabled: true
    state: started

- name: Create SQL mail user (without password)
  postgresql_user:
    name: mail
    state: present
  become: true
  become_user: postgres
  when: (mailservers|length == 0)

- name: Create SQL mail user (with password)
  postgresql_user:
    name: mail
    password: "{{ ispmail_mailserver_password }}"
    state: present
  become: true
  become_user: postgres
  when: (mailservers|length > 0)

- name: Create mailserver SQL database
  postgresql_db:
    name: mailserver
    encoding: UTF-8
    lc_collate: C
    lc_ctype: C
    template: template0
    owner: mail
  become: true
  become_user: postgres

- name: Create SQL pgadmin user
  postgresql_user:
    name: pgadmin
    password: "{{ ispmail_pgadmin_password }}"
    state: present
    db: mailserver
    priv: ALL
  become: true
  become_user: postgres

- name: Create the postgres user map
  blockinfile:
    dest: /etc/postgresql/9.6/main/pg_ident.conf
    marker: "### {mark} ANSIBLE MANAGED BLOCK : MAILMAP ###"
    insertafter: "^#\\s-+"
    content: |
      mailmap         dovecot                 mail
      mailmap         postfix                 mail
      mailmap         root                    mail
      mailmap         postgres                postgres
  notify: restart postgresql

- name: Create postgresql configuration files
  template:
    dest: "/etc/postgresql/9.6/main/{{ item }}"
    src: "{{ item }}.j2"
    mode: 0640
    owner: postgres
    group: postgres
  loop:
    - pg_hba.conf
    - postgresql.conf
  notify: restart postgresql

- name: Copy SQL database schema to server
  copy:
    src: schema.sql
    dest: /tmp

- name: Set up SQL schema of mailserver database
  postgresql_db:
    name: mailserver
    state: restore
    target: /tmp/schema.sql
  become: true
  become_user: postgres

- name: Give pgadmin user some rights
  postgresql_privs:
    database: mailserver
    type: table
    objs: "{{ item }}"
    roles: pgadmin
    privs: SELECT,INSERT,UPDATE,DELETE
  with_items:
    - virtual_domains
    - virtual_aliases
    - virtual_users
  become: true
  become_user: postgres

- name: Give mail user some rights
  postgresql_privs:
    database: mailserver
    type: table
    objs: "{{ item }}"
    roles: mail
    privs: SELECT,INSERT,UPDATE,DELETE
  with_items:
    - virtual_domains
    - virtual_aliases
    - virtual_users
  become: true
  become_user: postgres
